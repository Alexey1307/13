{"ast":null,"code":"import _classCallCheck from\"/home/alex/React/git/13/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alex/React/git/13/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/alex/React/git/13/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/alex/React/git/13/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/alex/React/git/13/my-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TestTodo=/*#__PURE__*/function(_Component){_inherits(TestTodo,_Component);var _super=_createSuper(TestTodo);function TestTodo(props){var _this;_classCallCheck(this,TestTodo);_this=_super.call(this,props);_this.state={value:''};// Синтаксис bind: let boundFunc = func.bind(context), context = this.\n_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}//Свойство event.target содержит элемент, на котором сработало событие.\n//Тоесть тут -> {event.target.value} сказано:\n//Событие-event(.точка)элемент на котором произошло событие-target(.точка)значение элемента-value.\n_createClass(TestTodo,[{key:\"handleChange\",value:function handleChange(event){this.setState({value:event.target.value});}},{key:\"handleSubmit\",value:function handleSubmit(event){console.log(this.state.value);//Здесь надо создавать функцию callback для вывода li.\nevent.preventDefault();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{children:\"Todo list\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"li\",{className:\"item\",onChange:this.handleChange,children:this.state.value}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:this.state.value,onChange:this.handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"})]})]});}}]);return TestTodo;}(Component);export default TestTodo;","map":{"version":3,"sources":["/home/alex/React/git/13/my-app/my-app/src/App.js"],"names":["React","Component","TestTodo","props","state","value","handleChange","bind","handleSubmit","event","setState","target","console","log","preventDefault"],"mappings":"qjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,Q,oGACF,kBAAYC,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,EADE,CAAb,CAIA;AACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CARe,aASlB,CAED;AACA;AACA;iDAEA,sBAAaE,KAAb,CAAoB,CAChB,KAAKC,QAAL,CAAc,CAAEL,KAAK,CAAEI,KAAK,CAACE,MAAN,CAAaN,KAAtB,CAAd,EACH,C,4BAED,sBAAaI,KAAb,CAAoB,CAChBG,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,KAAvB,EAA+B;AAC/BI,KAAK,CAACK,cAAN,GACH,C,sBAED,iBAAS,CACL,mBACI,oCACI,qCADJ,cAEI,aAFJ,cAGI,WAAI,SAAS,CAAC,MAAd,CAAqB,QAAQ,CAAE,KAAKR,YAApC,UAAmD,KAAKF,KAAL,CAAWC,KAA9D,EAHJ,cAII,cAAO,IAAI,CAAC,UAAZ,EAJJ,cAKI,cAAM,QAAQ,CAAE,KAAKG,YAArB,wBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAE,KAAKJ,KAAL,CAAWC,KAArC,CACI,QAAQ,CAAE,KAAKC,YADnB,EADJ,cAGI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,wDAA3B,EAHJ,GALJ,GADJ,CAcH,C,sBAxCkBL,S,EA4CvB,cAAeC,CAAAA,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass TestTodo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n\n        // Синтаксис bind: let boundFunc = func.bind(context), context = this.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //Свойство event.target содержит элемент, на котором сработало событие.\n    //Тоесть тут -> {event.target.value} сказано:\n    //Событие-event(.точка)элемент на котором произошло событие-target(.точка)значение элемента-value.\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        console.log(this.state.value); //Здесь надо создавать функцию callback для вывода li.\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <header>Todo list</header>\n                <br></br>\n                <li className='item' onChange={this.handleChange}>{this.state.value}</li>\n                <input type='checkbox' />\n                <form onSubmit={this.handleSubmit}>\n                    <input type='text' value={this.state.value}\n                        onChange={this.handleChange} />\n                    <input type='submit' value='Отправить'></input>\n                </form>\n            </div>\n\n        )\n    }\n}\n\n\nexport default TestTodo;"]},"metadata":{},"sourceType":"module"}